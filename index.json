{
  "index.html": {
    "href": "index.html",
    "title": "Cotopaxi - Overview",
    "summary": "Cotopaxi - Overview About A toolset for deploying data to Azure Cosmos DB as part of a cloud-native application, designed for straightforward integration with CI/CD pipelines. The package format is based on the Common Data Model (CDM) and the Open Packaging Conventions (OPC) standards. How to Use Creating a package project: { \"databases\": [ { \"name\": \"adventureworks\", \"containers\": [ { \"name\": \"products\", \"operations\": [ { \"name\": \"upsert\", \"documents\": [ \"adventureworks/products/**/*.json\" ] } ] } ] } ] } Packing the database documents for deployment in Azure DevOps: cotopaxi pack $(Build.SourcesDirectory)/adventureworks.json $(Build.StagingDirectory)/adventureworks.cdbpkg Building deployment package /home/vsts/work/1/a/adventureworks.cdbpkg for project /home/vsts/work/1/s/adventureworks.json Packing deployment entries dfcf04cb-886e-ae82-9172-fa4a1acb5d8b for container adventureworks\\products (upsert) Packing deployment entry /home/vsts/work/1/s/adventureworks/products/bikes.json:$[0] Deploying the package to an Azure Cosmos DB account in Azure DevOps: cotopaxi deploy $(System.ArtifactsDirectory)/**/*.cdbpkg Deploying package /home/vsts/work/r1/a/adventureworks.cdbpkg to endpoint https://cosmos-adventureworks.documents.azure.com:443 Deploying entries cdbpkg:dfcf04cb-886e-ae82-9172-fa4a1acb5d8b to container adventureworks\\products (upsert) Deploying entry cdbpkg:dfcf04cb-886e-ae82-9172-fa4a1acb5d8b:$[0] (upsert) - HTTP 200 Specifications Microsoft - Common Data Model ECMA - Open Packaging Conventions"
  },
  "topics/cli-checkpoint.html": {
    "href": "topics/cli-checkpoint.html",
    "title": "cotopaxi checkpoint",
    "summary": "cotopaxi checkpoint Name cotopaxi checkpoint - Creates a database package with rollback operations. Synopsis cotopaxi checkpoint <package> <rollback-package> [--endpoint <endpoint> --key <key>|--connection-string <connection-string>] cotopaxi checkpoint -h|--help Description Deploy Operation Rollback Operation Condition delete N/A The document does not exist in the container delete upsert The document does exist in the container create delete The document does not exist in the container create N/A The document does exist in the container upsert delete The document does not exist in the container upsert upsert The document does exist in the container patch N/A The document does not exist in the container patch upsert The document does exist in the container Arguments package The path to the database package or packages for deployment to the Azure Cosmos DB account (globbing patterns are supported). rollback-package The path to a resulting database package with rollback operations. Options --endpoint <endpoint> The address of the Azure Cosmos DB account. Can be specified with AZURE_COSMOS_ENDPOINT environment variable. Must be used with --key option or AZURE_COSMOS_KEY environment variable. --key <key> The account key or resource token for the Azure Cosmos DB account. Can be specified with AZURE_COSMOS_KEY environment variable. Must be used with --endpoint option or AZURE_COSMOS_ENDPOINT environment variable. --connection-string <connection-string> The connection string for the Azure Cosmos DB account. Can be specified with AZURE_COSMOS_CONNECTION_STRING environment variable. -h|--help Prints out a description of how to use the command. Examples Create a rollback package with an Azure DevOps release using AZURE_COSMOS_ENDPOINT and AZURE_COSMOS_KEY environment variables: cotopaxi checkpoint $(System.ArtifactsDirectory)/**/*.cdbpkg $(System.ArtifactsDirectory)/example.crbpkg"
  },
  "topics/cli-deploy.html": {
    "href": "topics/cli-deploy.html",
    "title": "cotopaxi deploy",
    "summary": "cotopaxi deploy Name cotopaxi deploy - Deploys the database packages to the Azure Cosmos DB account. Synopsis cotopaxi deploy <package> [--endpoint <endpoint> --key <key>|--connection-string <connection-string>] [--dry-run] cotopaxi deploy -h|--help Description The command uses a connection to the Azure Cosmos DB account to get partition keys configuration for regular and \"dry run\" modes. The operations on the same document defined by a unique identifier and partition key values are executed in the following order: Delete Create Upsert Patch Arguments package The path to the database package or packages to deploy to the Azure Cosmos DB account (globbing patterns are supported). Options --endpoint <endpoint> The address of the Azure Cosmos DB account. Can be specified with AZURE_COSMOS_ENDPOINT environment variable. Must be used with --key option or AZURE_COSMOS_KEY environment variable. --key <key> The account key or resource token for the Azure Cosmos DB account. Can be specified with AZURE_COSMOS_KEY environment variable. Must be used with --endpoint option or AZURE_COSMOS_ENDPOINT environment variable. --connection-string <connection-string> The connection string for the Azure Cosmos DB account. Can be specified with AZURE_COSMOS_CONNECTION_STRING environment variable. --dry-run Show which operations would be executed instead of actually executing them. -h|--help Prints out a description of how to use the command. Examples Deploying a package locally: cotopaxi deploy example.cdbpkg --endpoint https://example.documents.azure.com:443 --key $key$ Deploying a package locally using AZURE_COSMOS_KEY environment variable: cotopaxi deploy example.cdbpkg --endpoint https://example.documents.azure.com:443 Deploying packages with an Azure DevOps release using AZURE_COSMOS_ENDPOINT and AZURE_COSMOS_KEY environment variables: cotopaxi deploy $(System.ArtifactsDirectory)/**/*.cdbpkg Showing operations for deployment with an Azure DevOps release using AZURE_COSMOS_ENDPOINT and AZURE_COSMOS_KEY environment variables: cotopaxi deploy $(System.ArtifactsDirectory)/**/*.cdbpkg --dry-run"
  },
  "topics/cli-format.html": {
    "href": "topics/cli-format.html",
    "title": "cotopaxi format",
    "summary": "cotopaxi format Name cotopaxi format - Formats and cleans up the files with deployment entries. Synopsis cotopaxi format <source> cotopaxi format -h|--help Description The package formats the JSON files, removes comments and the system properties: _etag, _rid, _self, _ts. Arguments source The path to a file or files with deployment entries to format and clean up. Options -h|--help Prints out a description of how to use the command. Examples Formatting all project files: cotopaxi format adventureworks/**/*.json"
  },
  "topics/cli-pack.html": {
    "href": "topics/cli-pack.html",
    "title": "cotopaxi pack",
    "summary": "cotopaxi pack Name cotopaxi pack - Packs the deployment entries into a database package. Synopsis cotopaxi pack <project> <package> [--version <version>] cotopaxi pack -h|--help Description The package format supports the following deployment operations: create Given a unique identifier and partition key values, creates a document if it does not exist. upsert Given a unique identifier and partition key values, creates a document if it does not exist, or update if it exists. patch Given a unique identifier and partition key values, performs partial document update if it exists. delete Given a unique identifier and partition key values, deletes a document if it exists. Partial document update performs Azure Cosmos DB set operation on specified root-level document properties. The project format supports relative globbing patterns and the following variables in document paths: Name Value Version The value specified with the --version <version> option A documents file must be a JSON array of objects, where each object has the id property and partition key properties specified. Arguments project The path to the project that specifies deployment entries to include. package The path to a resulting database package. Options --version <version> Sets the package version information. -h|--help Prints out a description of how to use the command. Examples Packing documents locally: cotopaxi pack example.json example.cdbpkg Packing documents with an Azure DevOps pipeline: cotopaxi pack $(Build.SourcesDirectory)/example.json $(Build.StagingDirectory)/example.cdbpkg Packing documents with an Azure DevOps pipeline with commit ID as package version: cotopaxi pack $(Build.SourcesDirectory)/example.json $(Build.StagingDirectory)/example.cdbpkg --version $(Build.SourceVersion) The corresponding project file example.json: { \"databases\": [ { \"name\": \"adventureworks\", \"containers\": [ { \"name\": \"products\", \"operations\": [ { \"name\": \"upsert\", \"documents\": [ \"adventureworks/products/**/*.json\", \"adventureworks/products/**/*-$(Version).json\" ] } ] } ] } ] } The corresponding documents file adventureworks/products/bikes.json: [ { \"id\": \"3202cb6f-42af-4fe6-a3c5-d61927721e75\", \"category\": \"bikes\", \"name\": \"Mountain-100 Silver, 38\" } ]"
  }
}